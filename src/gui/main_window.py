# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from src.engine.track import MasterTrack, MonoTrack
from src.gui.bar import Bar
from src.gui.slider import LabeledSlider


VOL_MIN = -60
VOL_MAX = 12
VOL_YELLOW = -12
VOL_RED = 0


class Ui_MainWindow(object):
    def __init__(self):
        self.centralwidget = None
        self.gridLayout = None
        self.main_layout = None

        self.track_controls = None

        self.button_bar = None
        self.buttons = {}

        self.mixer = None
        self.master = {}
        self.tracks = []

        self.ambisonic_control = None
        
        self.space_control = {}
        self.space_display = {}

        self.menubar = None
        self.statusbar = None

        self.initialized = False

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        
        self.main_layout = QtWidgets.QHBoxLayout()
        self.main_layout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.main_layout.setObjectName("main_layout")
        
        self._create_track_controls()
        
        spacerItem1 = QtWidgets.QSpacerItem(40, 0, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.main_layout.addItem(spacerItem1)
        
        self._create_ambisonic_control()
        
        self.gridLayout.addLayout(self.main_layout, 0, 0, 1, 1)
        
        MainWindow.setCentralWidget(self.centralwidget)
        
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 900, 21))
        self.menubar.setNativeMenuBar(True)
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        MainWindow.setWindowTitle("Ambisonia")

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.initialized = True
        
    def _create_track_controls(self):
        self.track_controls = QtWidgets.QVBoxLayout()
        self.track_controls.setObjectName("track_controls")
        
        self._create_button_bar()
        
        self.mixer = QtWidgets.QHBoxLayout()
        self.mixer.setObjectName("mixer")
        
        self._create_master_track()

        for i in range(4):
            self.create_track(stereo=True)
        
        self.track_controls.addLayout(self.mixer)
        
        self.main_layout.addLayout(self.track_controls)
        
    def _create_button_bar(self):
        self.button_bar = QtWidgets.QHBoxLayout()
        self.button_bar.setContentsMargins(-1, -1, -1, -1)
        self.button_bar.setSpacing(0)
        self.button_bar.setObjectName("button_bar")
        
        self.buttons['play'] = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttons['play'].sizePolicy().hasHeightForWidth())
        self.buttons['play'].setSizePolicy(sizePolicy)
        self.buttons['play'].setMinimumSize(QtCore.QSize(60, 60))
        self.buttons['play'].setObjectName("play_pause")
        self.buttons['play'].setText("Play")
        self.button_bar.addWidget(self.buttons['play'])
        
        self.buttons['stop'] = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttons['stop'].sizePolicy().hasHeightForWidth())
        self.buttons['stop'].setSizePolicy(sizePolicy)
        self.buttons['stop'].setMinimumSize(QtCore.QSize(60, 60))
        self.buttons['stop'].setObjectName("stop")
        self.buttons['stop'].setText("Stop")
        self.button_bar.addWidget(self.buttons['stop'])

        self.buttons['export'] = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttons['export'].sizePolicy().hasHeightForWidth())
        self.buttons['export'].setSizePolicy(sizePolicy)
        self.buttons['export'].setMinimumSize(QtCore.QSize(60, 60))
        self.buttons['export'].setObjectName("export")
        self.buttons['export'].setText("Export")
        self.button_bar.addWidget(self.buttons['export'])
        
        spacerItem = QtWidgets.QSpacerItem(0, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.button_bar.addItem(spacerItem)

        self.track_controls.addLayout(self.button_bar)
        
    def _create_master_track(self):
        self.master['widget'] = QtWidgets.QVBoxLayout()
        self.master['widget'].setObjectName("master")
        
        self.master['label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.master['label'].sizePolicy().hasHeightForWidth())
        self.master['label'].setSizePolicy(sizePolicy)
        self.master['label'].setMinimumSize(QtCore.QSize(100, 0))
        self.master['label'].setMaximumSize(QtCore.QSize(100, 16777215))
        self.master['label'].setAlignment(QtCore.Qt.AlignCenter)
        self.master['label'].setObjectName("master_label")
        self.master['label'].setText("Master")
        self.master['widget'].addWidget(self.master['label'])
        
        self.master['mode'] = QtWidgets.QComboBox(self.centralwidget)
        self.master['mode'].setObjectName("master_mode")
        self.master['mode'].addItem("Stereo")
        self.master['mode'].addItem("Binaural")
        self.master['widget'].addWidget(self.master['mode'])
        
        self.master['volume'] = QtWidgets.QHBoxLayout()
        self.master['volume'].setObjectName("master_volume")
        
        self.master['v_control'] = LabeledSlider(VOL_MIN, VOL_MAX, interval=6, orientation=QtCore.Qt.Vertical,
                                                 parent=self.centralwidget, side='right')
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.master['v_control'].sizePolicy().hasHeightForWidth())
        self.master['v_control'].setSizePolicy(sizePolicy)
        self.master['v_control'].setMinimumSize(QtCore.QSize(0, 250))
        self.master['v_control'].sl.setProperty("value", 0)
        self.master['v_control'].setObjectName("master_volume_control")
        self.master['volume'].addWidget(self.master['v_control'])

        self.master['v_display'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
        self.master['volume'].addWidget(self.master['v_display'])
        
        self.master['widget'].addLayout(self.master['volume'])

        self.mixer.addLayout(self.master['widget'])
        
    def create_track(self, stereo=False):
        track_no = len(self.tracks)

        track = {'widget': QtWidgets.QVBoxLayout()}
        track['widget'].setObjectName("track{}".format(track_no))

        track['label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(track['label'].sizePolicy().hasHeightForWidth())
        track['label'].setSizePolicy(sizePolicy)
        track['label'].setMinimumSize(QtCore.QSize(100, 0))
        track['label'].setMaximumSize(QtCore.QSize(100, 16777215))
        track['label'].setAlignment(QtCore.Qt.AlignCenter)
        track['label'].setObjectName("track{}_label".format(track_no))
        track['label'].setText("Track {}".format(track_no + 1))
        track['widget'].addWidget(track['label'])

        track['load'] = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(track['load'].sizePolicy().hasHeightForWidth())
        track['load'].setSizePolicy(sizePolicy)
        track['load'].setMinimumSize(QtCore.QSize(0, 0))
        track['load'].setMaximumSize(QtCore.QSize(16777215, 25))
        track['load'].setObjectName("tack{}_load".format(track_no))
        track['load'].setText("Load")
        track['widget'].addWidget(track['load'])

        track['volume'] = QtWidgets.QHBoxLayout()
        track['volume'].setObjectName("track{}_volume".format(track_no))

        track['v_control'] = LabeledSlider(VOL_MIN, VOL_MAX, interval=6, orientation=QtCore.Qt.Vertical,
                                                 parent=self.centralwidget, side='right')
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(track['v_control'].sizePolicy().hasHeightForWidth())
        track['v_control'].setSizePolicy(sizePolicy)
        track['v_control'].setMinimumSize(QtCore.QSize(0, 250))
        track['v_control'].sl.setProperty("value", 0)
        track['v_control'].setObjectName("track{}_volume_control".format(track_no))
        track['volume'].addWidget(track['v_control'])

        if stereo:
            track['v_bar_left'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
            track['volume'].addWidget(track['v_bar_left'])

            track['v_bar_right'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
            track['volume'].addWidget(track['v_bar_right'])
        else:
            track['v_bar'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
            track['volume'].addWidget(track['v_bar'])

        track['widget'].addLayout(track['volume'])

        self.mixer.addLayout(track['widget'])

        self.tracks.append(track)

    def _create_ambisonic_control(self):
        self.ambisonic_control = QtWidgets.QVBoxLayout()
        self.ambisonic_control.setObjectName("ambisonic_control")

        spacerItem2 = QtWidgets.QSpacerItem(360, 0, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ambisonic_control.addItem(spacerItem2)

        self._create_space_control()

        self._create_space_display()

        self.main_layout.addLayout(self.ambisonic_control)

    def _create_space_control(self):
        self.space_control['widget'] = QtWidgets.QHBoxLayout()
        self.space_control['widget'].setObjectName("space_control")

        # stereo spacing
        self.space_control['stereo'] = QtWidgets.QVBoxLayout(self.centralwidget)
        self.space_control['stereo'].setObjectName("stereo_separation")

        self.space_control['stereo_label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_control['stereo_label'].sizePolicy().hasHeightForWidth())
        self.space_control['stereo_label'].setSizePolicy(sizePolicy)
        self.space_control['stereo_label'].setMinimumSize(QtCore.QSize(60, 0))
        self.space_control['stereo_label'].setMaximumSize(QtCore.QSize(60, 16777215))
        self.space_control['stereo_label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_control['stereo_label'].setObjectName("stereo_label")
        self.space_control['stereo_label'].setText("Stereo sep.")
        self.space_control['stereo'].addWidget(self.space_control['stereo_label'])

        self.space_control['stereo_control'] = LabeledSlider(0, 90, interval=15, orientation=QtCore.Qt.Vertical,
                                                 parent=self.centralwidget, side='right')
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_control['stereo_control'].sizePolicy().hasHeightForWidth())
        self.space_control['stereo_control'].setSizePolicy(sizePolicy)
        self.space_control['stereo_control'].setMinimumSize(QtCore.QSize(0, 250))
        self.space_control['stereo_control'].sl.setProperty("value", 0)
        self.space_control['stereo_control'].setObjectName("stereo_separation_control")
        self.space_control['stereo'].addWidget(self.space_control['stereo_control'])

        self.space_control['widget'].addLayout(self.space_control['stereo'])

        # horizontal position
        self.space_control['horizontal'] = QtWidgets.QVBoxLayout(self.centralwidget)
        self.space_control['horizontal'].setObjectName("horizontal_space")

        self.space_control['horizontal_label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_control['horizontal_label'].sizePolicy().hasHeightForWidth())
        self.space_control['horizontal_label'].setSizePolicy(sizePolicy)
        self.space_control['horizontal_label'].setMinimumSize(QtCore.QSize(0, 20))
        self.space_control['horizontal_label'].setMaximumSize(QtCore.QSize(16777215, 20))
        self.space_control['horizontal_label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_control['horizontal_label'].setObjectName("horizontal_space_label")
        self.space_control['horizontal_label'].setText("Horizontal")
        self.space_control['horizontal'].addWidget(self.space_control['horizontal_label'])

        self.space_control['horizontal_control'] = QtWidgets.QDial(self.centralwidget)
        self.space_control['horizontal_control'].setMinimum(-180)
        self.space_control['horizontal_control'].setMaximum(180)
        self.space_control['horizontal_control'].setWrapping(True)
        self.space_control['horizontal_control'].setNotchTarget(5.7)
        self.space_control['horizontal_control'].setNotchesVisible(True)
        self.space_control['horizontal_control'].setObjectName("horizontal_space_control")
        self.space_control['horizontal'].addWidget(self.space_control['horizontal_control'])

        self.space_control['widget'].addLayout(self.space_control['horizontal'])

        # horizontal position
        self.space_control['vertical'] = QtWidgets.QVBoxLayout(self.centralwidget)
        self.space_control['vertical'].setObjectName("vertical_space")

        self.space_control['vertical_label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_control['vertical_label'].sizePolicy().hasHeightForWidth())
        self.space_control['vertical_label'].setSizePolicy(sizePolicy)
        self.space_control['vertical_label'].setMinimumSize(QtCore.QSize(60, 0))
        self.space_control['vertical_label'].setMaximumSize(QtCore.QSize(60, 16777215))
        self.space_control['vertical_label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_control['vertical_label'].setObjectName("vertical_space_label")
        self.space_control['vertical_label'].setText("Vertical")
        self.space_control['vertical'].addWidget(self.space_control['vertical_label'])

        self.space_control['vertical_control'] = LabeledSlider(-90, 90, interval=30, orientation=QtCore.Qt.Vertical,
                                                             parent=self.centralwidget, side='left')
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_control['vertical_control'].sizePolicy().hasHeightForWidth())
        self.space_control['vertical_control'].setSizePolicy(sizePolicy)
        self.space_control['vertical_control'].setMinimumSize(QtCore.QSize(0, 250))
        self.space_control['vertical_control'].sl.setProperty("value", 0)
        self.space_control['vertical_control'].setObjectName("vertical_control")
        self.space_control['vertical'].addWidget(self.space_control['vertical_control'])

        self.space_control['widget'].addLayout(self.space_control['vertical'])

        self.ambisonic_control.addLayout(self.space_control['widget'])

    def _create_space_display(self):
        self.space_display['widget'] = QtWidgets.QHBoxLayout()
        self.space_display['widget'].setObjectName("space_display")

        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.space_display['widget'].addItem(spacerItem3)

        self.space_display['omni'] = {}
        self.space_display['omni']['widget'] = QtWidgets.QVBoxLayout()
        self.space_display['omni']['widget'].setObjectName("omni_display")
        self.space_display['omni']['label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_display['omni']['label'].sizePolicy().hasHeightForWidth())
        self.space_display['omni']['label'].setSizePolicy(sizePolicy)
        self.space_display['omni']['label'].setMinimumSize(QtCore.QSize(20, 0))
        self.space_display['omni']['label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_display['omni']['label'].setObjectName("omni_label")
        self.space_display['omni']['label'].setText("W")
        self.space_display['omni']['widget'].addWidget(self.space_display['omni']['label'])
        self.space_display['omni']['bar'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
        self.space_display['omni']['widget'].addWidget(self.space_display['omni']['bar'])
        self.space_display['widget'].addLayout(self.space_display['omni']['widget'])

        self.space_display['x'] = {}
        self.space_display['x']['widget'] = QtWidgets.QVBoxLayout()
        self.space_display['x']['widget'].setObjectName("x_display")
        self.space_display['x']['label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_display['x']['label'].sizePolicy().hasHeightForWidth())
        self.space_display['x']['label'].setSizePolicy(sizePolicy)
        self.space_display['x']['label'].setMinimumSize(QtCore.QSize(20, 0))
        self.space_display['x']['label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_display['x']['label'].setObjectName("x_label")
        self.space_display['x']['label'].setText("X")
        self.space_display['x']['widget'].addWidget(self.space_display['x']['label'])
        self.space_display['x']['bar'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
        self.space_display['x']['widget'].addWidget(self.space_display['x']['bar'])
        self.space_display['widget'].addLayout(self.space_display['x']['widget'])

        self.space_display['y'] = {}
        self.space_display['y']['widget'] = QtWidgets.QVBoxLayout()
        self.space_display['y']['widget'].setObjectName("y_display")
        self.space_display['y']['label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_display['y']['label'].sizePolicy().hasHeightForWidth())
        self.space_display['y']['label'].setSizePolicy(sizePolicy)
        self.space_display['y']['label'].setMinimumSize(QtCore.QSize(20, 0))
        self.space_display['y']['label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_display['y']['label'].setObjectName("y_label")
        self.space_display['y']['label'].setText("Y")
        self.space_display['y']['widget'].addWidget(self.space_display['y']['label'])
        self.space_display['y']['bar'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
        self.space_display['y']['widget'].addWidget(self.space_display['y']['bar'])
        self.space_display['widget'].addLayout(self.space_display['y']['widget'])

        self.space_display['z'] = {}
        self.space_display['z']['widget'] = QtWidgets.QVBoxLayout()
        self.space_display['z']['widget'].setObjectName("z_display")
        self.space_display['z']['label'] = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.space_display['z']['label'].sizePolicy().hasHeightForWidth())
        self.space_display['z']['label'].setSizePolicy(sizePolicy)
        self.space_display['z']['label'].setMinimumSize(QtCore.QSize(20, 0))
        self.space_display['z']['label'].setAlignment(QtCore.Qt.AlignCenter)
        self.space_display['z']['label'].setObjectName("z_label")
        self.space_display['z']['label'].setText("Z")
        self.space_display['z']['widget'].addWidget(self.space_display['z']['label'])
        self.space_display['z']['bar'] = Bar(VOL_MIN, VOL_MAX, VOL_YELLOW, VOL_RED)
        self.space_display['z']['widget'].addWidget(self.space_display['z']['bar'])
        self.space_display['widget'].addLayout(self.space_display['z']['widget'])

        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.space_display['widget'].addItem(spacerItem4)
        self.ambisonic_control.addLayout(self.space_display['widget'])
